@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using static Fresh724.Entity.Entities.Product
@model PagedList.IPagedList<Fresh724.Entity.Entities.Product>
@{
    ViewData["Title"] = "Index";
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Products";
}

<h2>Category</h2>
<div class="row mb-3">
        <div class="col">
            <a asp-action="Add" class="btn btn-primary btn-sm"><i class="fa fa-plus me-2"></i>New Product</a>
        </div>
    </div>
    <div class="container">
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-xs-4">
                            <h2 class="text-center">Category <b>Details</b></h2>
                            </div>
                </div>
            </div>
@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{
    <div class="col-xs-4">
        <div class="search-box">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search&hellip;"name="SearchString" value="@ViewData["CurrentFilter"]"/>
                <input class="btn btn-primary btn-group-sm" value="Search" type="submit"/>
            </div>
        </div>
    </div>
}
<table class="table table-bordered">
    <thead>
    <tr>
        <th>Id</th>
        <th>@Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
        <th>Description</th>
        <th>@Html.ActionLink("PurchasePrice", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })</th>
        <th>@Html.ActionLink("CreatedDateTime", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })</th>
        <th>ImageUrl</th>
        <th>Status</th>
        <th>@Html.ActionLink("CompanyName", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })</th>
        <th>Category</th>
        <th></th>
        <th></th>
    </tr>
    
    @foreach (var product in Model) {
    <tbody >
    <tr class="table table-secondary">
        <td>@Html.DisplayFor(modelItem => product.Id)</td>
        <td>@Html.DisplayFor(modelItem => product.Title)</td>
        <td>@Html.DisplayFor(modelItem => product.Description)</td>
        <td>@Html.DisplayFor(modelItem => product.PurchasePrice)</td>
        <td>@Html.DisplayFor(modelItem => product.CreatedDateTime)</td>
        <td>@Html.DisplayFor(modelItem => product.ImageUrl)</td>
        <td>@Html.DisplayFor(modelItem => product.Status)</td>
        <td>@Html.DisplayFor(modelItem => product.Company.Name)</td>
        <td><a asp-action="Edit" asp-route-id="@product.Id" class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons">&#xE254;</i></a> </td>
        <td><a asp-action="Delete" asp-route-id="@product.Id" onclick="return confirm('Are you sure want to delete this user : @product.Title ?')" class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons">&#xE872;</i></a>
    </tr>
    </tbody>
}
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", 
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
 </div>
    </div>
